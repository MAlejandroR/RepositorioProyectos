<?php

namespace App\Filament\Resources\TeacherResource\Pages;

use App\Filament\Resources\TeacherResource;
use App\Models\Family;
use App\Models\User;
use Filament\Actions;
use Filament\Actions\Action;
use Filament\Resources\Pages\ListRecords;
use Illuminate\Contracts\Support\Htmlable;
use Illuminate\Database\Eloquent\Builder;


class ListTeachers extends ListRecords
{
    protected static string $resource = TeacherResource::class;

    /*En función de que sean profesores de una especialidad o todos los profesores
    Se ajusta el título
    Profesores (en generaa, todos)
    X profesores de una especialidad
*/
    //TODO pendiente de ajustar traducciones
    public function getTitle(): string|Htmlable
    {
        if($family_id = request('family_id')){ //Estoy mostrando profesores de una familia
            $family = Family::find($family_id);
            $count = User::role("teacher")->whereHas('specialization', fn ($q) => $q->where('family_id', $family_id))->count();
            return ($count ." ". __("Profesores de ").$family->name);
        }
        return parent::getTitle(); // TODO: Change the autogenerated stub
    }

//    protected function getHeaderActions(): array
//    {
//        return [
//            Actions\CreateAction::make(),
//        ];
//    }

    protected function getHeaderWidgets(): array{
        if (request ("family_id"))
            return [];
        return [
            TeacherResource\Widgets\TeacherWidgetPie::class,
        ];
    }
    protected function getTableQuery(): Builder
    {
        $query = parent::getTableQuery()
            ->whereHas('roles', fn ($q) => $q->where('name', 'teacher'));


        if ($familyId = request('family_id')) {
            // ⚠️ adjust this relation name to yours:
            $query->whereHas('specialization', fn ($q) => $q->where('family_id', $familyId));
        }
        info($familyId);
//        info($query);
        return $query;
    }
    public function getHeaderActions(): array
    {
        $actions[]=Actions\CreateAction::make("back")
            ->label("Volver")
            ->url(route("filament.admin.resources.users.index"));

        if ($family_id=request('family_id')) {
            $actions[] = Action::make('back')
                ->label(__('Volver a todos los profesores'))
                ->url(route('filament.admin.resources.teachers.index'));
            $actions[] = Actions\CreateAction::make()
                ->url(route('filament.admin.resources.teachers.create',['family_id'=>$family_id]));
        }else
            $actions[]=    Actions\CreateAction::make();//,parent::getHeaderActions();

        return $actions;
    }
}
